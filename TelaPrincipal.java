/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author João Lucas Moura Bitencourt
 */

import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.sql.ResultSet;
import javax.swing.JPasswordField;
import javax.swing.JTextField;




public class TelaPrincipal extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(TelaPrincipal.class.getName());

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtCPF = new javax.swing.JTextField();
        txtAgencia = new javax.swing.JTextField();
        txtPix = new javax.swing.JTextField();
        txtScore = new javax.swing.JTextField();
        bntBuscar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtChavePixDestino = new javax.swing.JTextField();
        bntEnviarPix = new javax.swing.JButton();
        bntSacar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtValorPix = new javax.swing.JTextField();
        bntDenunciar = new javax.swing.JButton();
        bntVerificarSaldo = new javax.swing.JButton();
        btnDepositar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("NOME:");

        jLabel2.setText("CPF:");

        jLabel3.setText("AGÊNCIA:");

        jLabel4.setText("CHAVE PIX:");

        jLabel5.setText("SCORE:");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        txtCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFActionPerformed(evt);
            }
        });

        txtPix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPixActionPerformed(evt);
            }
        });

        txtScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtScoreActionPerformed(evt);
            }
        });

        bntBuscar.setText("Buscar");
        bntBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntBuscarActionPerformed(evt);
            }
        });

        jLabel6.setText("CHAVE PIX:");

        txtChavePixDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChavePixDestinoActionPerformed(evt);
            }
        });

        bntEnviarPix.setText("Enviar Pix");
        bntEnviarPix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntEnviarPixActionPerformed(evt);
            }
        });

        bntSacar.setText("Sacar");
        bntSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSacarActionPerformed(evt);
            }
        });

        jLabel7.setText("VALOR:");

        bntDenunciar.setText("Denunciar");
        bntDenunciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntDenunciarActionPerformed(evt);
            }
        });

        bntVerificarSaldo.setText("Verificar Saldo");
        bntVerificarSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntVerificarSaldoActionPerformed(evt);
            }
        });

        btnDepositar.setText("Depositar");
        btnDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDepositar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bntSacar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtChavePixDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bntBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bntVerificarSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bntDenunciar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bntEnviarPix, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(txtValorPix, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(27, 27, 27)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtPix)
                                        .addComponent(txtAgencia, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))))
                            .addComponent(jLabel4))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(21, 21, 21)
                                .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtScore)))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAgencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntVerificarSaldo)
                    .addComponent(bntBuscar)
                    .addComponent(bntDenunciar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntSacar)
                    .addComponent(btnDepositar)
                    .addComponent(bntEnviarPix))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(txtChavePixDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorPix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void bntBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntBuscarActionPerformed

    try {
        Connection conn = ConexaoBD.conectar();

        String sql = "SELECT * FROM clientes WHERE cpf = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setString(1, txtCPF.getText());

        ResultSet rs = stmt.executeQuery();

        if (rs.next()) {
            txtNome.setText(rs.getString("nome"));
            txtPix.setText(rs.getString("chave_pix"));
            txtAgencia.setText(rs.getString("agencia"));
            txtScore.setText(String.valueOf(rs.getInt("score")));
        } else {
            JOptionPane.showMessageDialog(this, "Cliente não encontrado.");
        }

        conn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
    }
      // TODO add your handling code here:
    }//GEN-LAST:event_bntBuscarActionPerformed

    private void txtChavePixDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChavePixDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChavePixDestinoActionPerformed

    private void bntEnviarPixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntEnviarPixActionPerformed
     try {
        Connection conn = ConexaoBD.conectar();

        String chaveDestino = txtChavePixDestino.getText();
        double valor = Double.parseDouble(txtValorPix.getText());

        // Verificar score do remetente
        int score = Integer.parseInt(txtScore.getText());
        if (score < 40) {
            JOptionPane.showMessageDialog(this, "Pix bloqueado: o score de confiança do destinatário é muito baixo.");
            return;
        }

        // Se o score estiver entre 40 e 70, exibir aviso
        if (score >= 40 && score <= 70) {
            int resposta = JOptionPane.showConfirmDialog(this,
                "O score de confiança do destinatário indica um risco. Deseja realmente enviar este Pix?",
                "Aviso de Segurança",
                JOptionPane.YES_NO_OPTION);

            if (resposta != JOptionPane.YES_OPTION) {
                JOptionPane.showMessageDialog(this, "Transferência cancelada.");
                return;
            }
        }

        // Verificar se o saldo é suficiente
        String cpfRemetente = txtCPF.getText();
        String consultarSaldo = "SELECT saldo FROM clientes WHERE cpf = ?";
        PreparedStatement saldoStmt = conn.prepareStatement(consultarSaldo);
        saldoStmt.setString(1, cpfRemetente);
        ResultSet saldoRs = saldoStmt.executeQuery();

        if (saldoRs.next()) {
            double saldoAtual = saldoRs.getDouble("saldo");

            if (saldoAtual < valor) {
                JOptionPane.showMessageDialog(this, "Saldo insuficiente.");
                return;
            }

            // Adicionar ao saldo do destinatário
            String atualizarSaldoDestino = "UPDATE clientes SET saldo = saldo + ? WHERE chave_pix = ?";
            PreparedStatement adicionarStmt = conn.prepareStatement(atualizarSaldoDestino);
            adicionarStmt.setDouble(1, valor);
            adicionarStmt.setString(2, chaveDestino);
            int linhasAfetadas = adicionarStmt.executeUpdate();

            if (linhasAfetadas > 0) {
                JOptionPane.showMessageDialog(this, "Pix enviado com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Chave Pix não encontrada. Pix não realizado.");
                // Opcional: reembolsar saldo ao remetente
                String estorno = "UPDATE clientes SET saldo = saldo + ? WHERE cpf = ?";
                PreparedStatement estornoStmt = conn.prepareStatement(estorno);
                estornoStmt.setDouble(1, valor);
                estornoStmt.setString(2, cpfRemetente);
                estornoStmt.executeUpdate();
            }
        }

        conn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao enviar Pix: " + e.getMessage());
    }       // TODO add your handling code here:
    }//GEN-LAST:event_bntEnviarPixActionPerformed

    private void txtCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPFActionPerformed

    private void bntSacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSacarActionPerformed
    try {
        Connection conn = ConexaoBD.conectar();

        // Entrada de senha
        JPasswordField passwordField = new JPasswordField();
        JTextField valorField = new JTextField();
        Object[] fields = {
            "Senha:", passwordField,
            "Valor a sacar:", valorField
        };

        int option = JOptionPane.showConfirmDialog(this, fields, "Saque", JOptionPane.OK_CANCEL_OPTION);

        if (option == JOptionPane.OK_OPTION) {
            String senha = new String(passwordField.getPassword());
            double valorSaque = Double.parseDouble(valorField.getText());
            String cpf = txtCPF.getText();

            // Verifica senha
            String sqlSenha = "SELECT saldo FROM clientes WHERE cpf = ? AND senha = ?";
            PreparedStatement stmtSenha = conn.prepareStatement(sqlSenha);
            stmtSenha.setString(1, cpf);
            stmtSenha.setString(2, senha);
            ResultSet rs = stmtSenha.executeQuery();

            if (rs.next()) {
                double saldoAtual = rs.getDouble("saldo");

                if (valorSaque <= saldoAtual) {
                    // Atualiza saldo
                    String sqlSaque = "UPDATE clientes SET saldo = saldo - ? WHERE cpf = ?";
                    PreparedStatement stmtSaque = conn.prepareStatement(sqlSaque);
                    stmtSaque.setDouble(1, valorSaque);
                    stmtSaque.setString(2, cpf);
                    stmtSaque.executeUpdate();

                    JOptionPane.showMessageDialog(this, "Saque de R$ " + valorSaque + " realizado com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(this, "Saldo insuficiente.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Senha incorreta.");
            }

            conn.close();
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
    }       // TODO add your handling code here:
    }//GEN-LAST:event_bntSacarActionPerformed

    private void txtPixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPixActionPerformed

    private void txtScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtScoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtScoreActionPerformed

    private void bntDenunciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntDenunciarActionPerformed
    String motivo = JOptionPane.showInputDialog(this, "Descreva o motivo da denúncia:");
    
    if (motivo != null && !motivo.trim().isEmpty()) {
        try {
            Connection conn = ConexaoBD.conectar();

            // Inserir denúncia
            String sqlInsert = "INSERT INTO denuncias (cpf_cliente, motivo) VALUES (?, ?)";
            PreparedStatement stmtInsert = conn.prepareStatement(sqlInsert);
            stmtInsert.setString(1, txtCPF.getText());
            stmtInsert.setString(2, motivo);
            stmtInsert.executeUpdate();

            // Diminuir score
            String sqlUpdate = "UPDATE clientes SET score = score - 10 WHERE cpf = ?";
            PreparedStatement stmtUpdate = conn.prepareStatement(sqlUpdate);
            stmtUpdate.setString(1, txtCPF.getText());
            stmtUpdate.executeUpdate();

            conn.close();
            JOptionPane.showMessageDialog(this, "Denúncia registrada. Score do cliente penalizado.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao registrar denúncia: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Denúncia cancelada.");
    }        // TODO add your handling code here:
    }//GEN-LAST:event_bntDenunciarActionPerformed

    private void bntVerificarSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntVerificarSaldoActionPerformed
    String cpf = txtCPF.getText();

    // Painel para digitar a senha
    JPasswordField campoSenha = new JPasswordField();
    Object[] mensagem = {
        "Digite sua senha (4 dígitos):", campoSenha
    };

    int opcao = JOptionPane.showConfirmDialog(this, mensagem, "Autenticação", JOptionPane.OK_CANCEL_OPTION);

    if (opcao == JOptionPane.OK_OPTION) {
        String senhaDigitada = new String(campoSenha.getPassword());

        try {
            Connection conn = ConexaoBD.conectar();
            String sql = "SELECT saldo FROM clientes WHERE cpf = ? AND senha = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, cpf);
            stmt.setString(2, senhaDigitada);

            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                double saldo = rs.getDouble("saldo");
                JOptionPane.showMessageDialog(this, "Saldo atual: R$ " + String.format("%.2f", saldo));
            } else {
                JOptionPane.showMessageDialog(this, "Senha incorreta ou CPF inválido.");
            }

            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao verificar saldo: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Operação cancelada.");
    }// TODO add your handling code here:
    }//GEN-LAST:event_bntVerificarSaldoActionPerformed

    private void btnDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositarActionPerformed
    String cpf = txtCPF.getText();

    if (cpf.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Digite o CPF do cliente.");
        return;
    }

    String valorStr = JOptionPane.showInputDialog(this, "Digite o valor a ser depositado:");
    
    if (valorStr == null) return; // Cancelado
    
    try {
        double valor = Double.parseDouble(valorStr);

        if (valor <= 0) {
            JOptionPane.showMessageDialog(this, "Digite um valor positivo.");
            return;
        }

        Connection conn = ConexaoBD.conectar();

        // Atualiza saldo
        String sql = "UPDATE clientes SET saldo = saldo + ? WHERE cpf = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setDouble(1, valor);
        stmt.setString(2, cpf);

        int rows = stmt.executeUpdate();

        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Depósito realizado com sucesso!");
        } else {
            JOptionPane.showMessageDialog(this, "Cliente não encontrado.");
        }

        conn.close();
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Valor inválido.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
    }        // TODO add your handling code here:
    }//GEN-LAST:event_btnDepositarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new TelaPrincipal().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntBuscar;
    private javax.swing.JButton bntDenunciar;
    private javax.swing.JButton bntEnviarPix;
    private javax.swing.JButton bntSacar;
    private javax.swing.JButton bntVerificarSaldo;
    private javax.swing.JButton btnDepositar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtAgencia;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtChavePixDestino;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPix;
    private javax.swing.JTextField txtScore;
    private javax.swing.JTextField txtValorPix;
    // End of variables declaration//GEN-END:variables

}

